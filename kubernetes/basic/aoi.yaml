apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: banner-deploy
  name: banner-deploy
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: banner-deploy
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: banner-deploy
    spec:
      containers:
      - image: chrisedrego/pizza:banner
        imagePullPolicy: IfNotPresent
        name: pizza
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: banner-deploy
  name: banner-deploy
  namespace: default
spec:
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: banner-deploy
  sessionAffinity: None
  type: ClusterIP

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: banner
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: bhau-cha-banner.dev.didevops.com
    http:
      paths:
      - backend:
          service:
            name: banner-deploy
            port:
              number: 80
        path: /
        pathType: Prefix